host: litellm.example.com

litellm-helm:
  enabled: true
  .aws_api_key: &aws-api-key
    aws_access_key_id: os.environ/AWS_ACCESS_KEY_ID
    aws_secret_access_key: os.environ/AWS_SECRET_ACCESS_KEY
    aws_region_name: os.environ/AWS_REGION


  image:
    repository: ghcr.io/amazeeio/litellm-database
    tag: "main"

  envVars:
      AWS_ACCESS_KEY_ID: "fillme"
      AWS_SECRET_ACCESS_KEY: "fillme"
      AWS_REGION: "fillme"
      UI_USERNAME: admin
      UI_PASSWORD: fillme
  proxy_config:
    model_list:

      - model_name: claude-3-5-haiku
        litellm_params: &claude-3-5-haiku
          model: bedrock/anthropic.claude-3-haiku-20240307-v1:0
          <<: *aws-api-key
      - model_name: claude-3-5-sonnet
        litellm_params: &claude-3-5-sonnet
          model: bedrock/anthropic.claude-3-5-sonnet-20240620-v1:0
          <<: *aws-api-key
      - model_name: titan-embed-text-v2:0
        litellm_params: &titan-embed-text-v2
          model: amazon.titan-embed-text-v2:0
          <<: *aws-api-key

      # Operation aliases - see AI module operation types.
      - model_name: chat
        litellm_params: *claude-3-5-haiku
      - model_name: chat_with_complex_json
        litellm_params: *claude-3-5-sonnet
      - model_name: chat_with_image_vision
        litellm_params: *claude-3-5-haiku
      - model_name: embeddings
        litellm_params: *titan-embed-text-v2

    litellm_settings:
      callbacks: ["prometheus"]
      drop_params: true

    general_settings:
      master_key: os.environ/PROXY_MASTER_KEY
      store_model_in_db: true
      store_prompts_in_spend_logs: true


prometheus:
  server:
    global:
      external_labels:
        cluster: example.com 
    namespaces:
      - litellm  # This will be the default namespace, can be overridden during helm install
    ingress:
      enabled: false
      annotations:
        nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
      paths:
        - /federate
      pathType: Prefix
      hosts:
        - prometheus.example.com
      tls:
        - secretName: prometheus-tls
          hosts:
            - prometheus.example.com      
  prometheus-node-exporter:
    enabled: false
  prometheus-pushgateway:
    enabled: false
  extraScrapeConfigs: | 
    - job_name: 'litellm'
      scrape_interval: 15s
      static_configs:
        - targets: ['litellm:4000'] 



grafana:
  enabled: true
  ingress:
    enabled: true
    annotations:
      cert-manager.io/issuer: "letsencrypt-prod"
    ingressClassName: nginx
    hosts:
    - grafana.example.com
    tls:
    - hosts:
      - grafana.example.com
      secretName: grafana-tls
      
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://litellm-prometheus-server
          access: proxy
          isDefault: true
          editable: false
  persistence:
    type: pvc
    enabled: true
    size: 1Gi
  deploymentStrategy:
    type: Recreate          